@model DnDUtilitySite.Models.CharacterSheet

@{
    ViewBag.Title = "DnD Util";
    Layout = "_Layout";
    ViewData["proficiencyBonus"] = Model.ProficiencyBonus;
}
<div class="container">
    <main role="main" class="pb-3">
        <h2 class="w-75 text-center mx-auto">@Model.Name</h2>
        <div class="font-italic card-subtitle mx-auto w-25 text-center">
            @Model.GetClassesAsString()
        </div>
        <div id="main-sheet" class="w-75 mx-auto container">
            <div class="row" id="ability-scores-heading">
                <h3 class="col-4 mx-auto text-center">Ability Scores</h3>
            </div>
            <div class="row" id="ability-scores-display">
                <div class="col- mx-auto">
                    <partial name="PartialViews/StatDisplay" model="@Model.BaseStrengthStat"/>
                </div>
                <div class="col- mx-auto">
                    <partial name="PartialViews/StatDisplay" model="@Model.BaseDexterityStat"/>
                </div>
                <div class="col- mx-auto">
                    <partial name="PartialViews/StatDisplay" model="@Model.BaseConstitutionStat"/>
                </div>
                <div class="col- mx-auto">
                    <partial name="PartialViews/StatDisplay" model="@Model.BaseIntelligenceStat"/>
                </div>
                <div class="col- mx-auto">
                    <partial name="PartialViews/StatDisplay" model="@Model.BaseWisdomStat"/>
                </div>
                <div class="col- mx-auto">
                    <partial name="PartialViews/StatDisplay" model="@Model.BaseCharismaStat"/>
                </div>
            </div>

            <div class="row">
                <div class="card-group w-100">
                    <div class="card">
                        <h3 class="card-header">Saving Throws</h3>

                        <ul class="list-group list-group-flush" id="saving-throws-display">
                            @foreach (var savingThrow in Model.SavingThrows)
                            {
                                ViewData["stat"] = Model.BaseStats.FirstOrDefault(stat => stat.Stat == savingThrow.Stat);
                                <li class="list-group-item">
                                    <partial name="PartialViews/SavingThrowPartialView" model="savingThrow" view-data="ViewData"/>
                                </li>
                            }
                        </ul>
                    </div>
                    <div class="card">
                        <h3 class="card-header">Skills</h3>
                        <ul class="list-group list-group-flush" id="skills-display">
                            @foreach (var playerSkill in Model.Skills)
                            {
                                ViewData["stat"] = Model.BaseStats.FirstOrDefault(stat => stat.Stat == playerSkill.ApplicableStat);
                                <li class="list-group-item">
                                    <partial name="PartialViews/SkillPartialView" model="playerSkill" view-data="ViewData"/>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </main>
</div>